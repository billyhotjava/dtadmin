package com.yuzhi.dtadmin.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AuditLogAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuditLogAllPropertiesEquals(AuditLog expected, AuditLog actual) {
        assertAuditLogAutoGeneratedPropertiesEquals(expected, actual);
        assertAuditLogAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuditLogAllUpdatablePropertiesEquals(AuditLog expected, AuditLog actual) {
        assertAuditLogUpdatableFieldsEquals(expected, actual);
        assertAuditLogUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuditLogAutoGeneratedPropertiesEquals(AuditLog expected, AuditLog actual) {
        assertThat(actual)
            .as("Verify AuditLog auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuditLogUpdatableFieldsEquals(AuditLog expected, AuditLog actual) {
        assertThat(actual)
            .as("Verify AuditLog relevant properties")
            .satisfies(a -> assertThat(a.getActor()).as("check actor").isEqualTo(expected.getActor()))
            .satisfies(a -> assertThat(a.getAction()).as("check action").isEqualTo(expected.getAction()))
            .satisfies(a -> assertThat(a.getTarget()).as("check target").isEqualTo(expected.getTarget()))
            .satisfies(a -> assertThat(a.getDetails()).as("check details").isEqualTo(expected.getDetails()))
            .satisfies(a -> assertThat(a.getResult()).as("check result").isEqualTo(expected.getResult()))
            .satisfies(a -> assertThat(a.getAt()).as("check at").isEqualTo(expected.getAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuditLogUpdatableRelationshipsEquals(AuditLog expected, AuditLog actual) {
        // empty method
    }
}
