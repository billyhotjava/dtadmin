# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
  level:
    ROOT: DEBUG
    tech.jhipster: DEBUG
    org.hibernate.SQL: DEBUG
    com.yuzhi.dtadmin: DEBUG
    com.yuzhicloud.dtadmin: DEBUG

spring:
  devtools:
    restart:
      enabled: true
      additional-exclude: static/**
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
  docker:
    compose:
      enabled: false # 禁用Docker Compose自动启动
  jackson:
    serialization:
      indent-output: true
    deserialization:
      fail-on-unknown-properties: false
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:${SPRING_DATASOURCE_PLATFORM:mysql}://${DB_SERVICE_HOST:localhost}:${DB_SERVICE_PORT}/${DB_SERVICE_DB_NAME:dtadmin}
    username: ${DB_SERVICE_USER:dtadmin}
    password: ${DB_SERVICE_PASSWORD:dtadmin}
    hikari:
      poolName: Hikari
      auto-commit: false
  liquibase:
    # Remove 'faker' if you do not want the sample data to be loaded automatically
    contexts: dev, faker
  messages:
    cache-duration: PT1S # 1 second, see the ISO 8601 standard
  thymeleaf:
    cache: false

server:
  port: 8080
  # make sure requests the proxy uri instead of the server one
  forward-headers-strategy: native

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  cache: # Cache configuration
    ehcache: # Ehcache configuration
      time-to-live-seconds: 3600 # By default objects stay 1 hour in the cache
      max-entries: 100 # Number of objects in each cache entry
  # CORS is only enabled by default with the "dev" profile
  cors:
    # Allow Ionic for JHipster by default (* no longer allowed in Spring Boot 2.4+)
    allowed-origins:  ${CORS_URLS:'http://localhost:8800,http://dtadmin:8080,http://localhost:8100,https://localhost:8100,http://localhost:3003,http://localhost:3002,http://localhost:3000,https://localhost:3000,http://localhost:3001,https://localhost:3001'}
    # Enable CORS when running in GitHub Codespaces
    allowed-origin-patterns: 'https://*.githubpreview.dev'
    allowed-methods: '*'
    allowed-headers: '*'
    exposed-headers: 'Authorization,Link,X-Total-Count,X-${jhipster.clientApp.name}-alert,X-${jhipster.clientApp.name}-error,X-${jhipster.clientApp.name}-params'
    allow-credentials: true
    max-age: 1800
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      ring-buffer-size: 512
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:

# Keycloak 自定义配置 - 使用管理API
app:
  keycloak:
    server-url: ${KEYCLOAK_URL:https://sso.yuzhicloud.com}
    # 管理API认证使用目标realm
    auth-realm: ${KEYCLOAK_REALM:s10}
    # 目标管理的realm
    target-realm: ${KEYCLOAK_REALM:s10}
    # 管理客户端配置
    admin:
      username: ${KEYCLOAK_ADMIN_USER:s10}
      password: ${KEYCLOAK_ADMIN_PWD:s10}
      client-id: admin-cli
    # 普通客户端配置（用于用户登录）
    # 注意：web-app客户端需要在Keycloak中配置为支持Direct Access Grants
    client-id: admin-cli  # 使用web-app客户端进行用户登录
    client-secret: 
    ssl:
      trust-all: true
